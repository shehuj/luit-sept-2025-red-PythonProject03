name: Deploy Lambda to Beta

on:
  pull_request:
    branches:
      - main
      - dev


permissions:
  id-token: write
  contents: read

jobs:
  deploy-beta:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Display PR info
        run: |
          echo "Pull Request #${{ github.event.pull_request.number }}"
          echo "Head branch: ${{ github.head_ref }}"
          echo "Base branch: ${{ github.event.pull_request.base.ref }}"

      - name: Run required files check
        run: |
          python tests/check_required_files.py

      - name: Configure AWS credentials
        if: steps.run_required_files_check.outcome == 'success'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Debug AWS Identity
        if: steps.run_required_files_check.outcome == 'success'
        run: |
          aws sts get-caller-identity || echo "No credentials"
          env | grep AWS

      - name: Zip Lambda Function
        if: steps.run_required_files_check.outcome == 'success'
        run: zip ${ { secrets.LAMBDA_NAME_BETA } }.zip lambda_function.py

      - name: Upload to S3 (Beta)
        if: steps.run_required_files_check.outcome == 'success'
        run: aws s3 cp ${ { secrets.LAMBDA_NAME_BETA } }.zip s3://${{ secrets.S3_BUCKET_BETA }}/${{ secrets.S3_PATH_BETA }}

      - name: Deploy CloudFormation (Beta)
        if: steps.run_required_files_check.outcome == 'success'
        run: |
          aws cloudformation deploy \
            --stack-name ${{ secrets.CF_STACK_NAME_BETA }} \
            --template-file infrastructure/cloudformation/lambda-ec2-shutdown.yml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              LambdaFunctionName=${{ secrets.LAMBDA_NAME_BETA }} \
              LambdaCodeBucket=${{ secrets.S3_BUCKET_BETA }} \
              LambdaCodeKey=${{ secrets.S3_PATH_BETA }}

      # (Your CloudWatch logging step can remain as you have it, gated similarly)