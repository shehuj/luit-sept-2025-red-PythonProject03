name: Deploy Lambda to prod, logs to CloudWatch.

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy-prod:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      AWS_REGION: ${{secrets.AWS_REGION}}
      LAMBDA_NAME_PROD: ${{secrets.LAMBDA_NAME_PROD}}
      S3_BUCKET_PROD: ${{secrets.S3_BUCKET_PROD}}
      S3_PATH_PROD: ${{secrets.S3_PATH_PROD}}
      CF_STACK_NAME_PROD: ${{secrets.CF_STACK_NAME_PROD}}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -r requirements.txt
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Check required files
        run: |
          python tests/test_check_required_files.py

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Zip Lambda Function
        run: zip -r ${{ env.LAMBDA_NAME_PROD }}.zip /lambda_function_advance.py

      - name: Upload to S3 (Prod)
        run: aws s3 cp ${{ env.LAMBDA_NAME_PROD }}.zip s3://${{ secrets.S3_BUCKET_PROD }}/${{ secrets.S3_PATH_PROD }}

      - name: Deploy CloudFormation (Prod)
        run: |
          aws cloudformation deploy \
            --stack-name ${{ env.CF_STACK_NAME_PROD }} \
            --template-file infrastructure/cloudformation/ec2-shutdown-advance.yml \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              LambdaFunctionName=${{ env.LAMBDA_NAME_PROD }} \
              LambdaCodeBucket=${{ env.S3_BUCKET_PROD }} \
              LambdaCodeKey=${{ env.S3_PATH_PROD }}